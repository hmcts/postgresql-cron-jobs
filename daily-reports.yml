
name: Postgres DB Daily Reports
schedules:
- cron: "0 2 * * *"
  displayName: Daily reports
  branches:
    include:
    - DTSRD-2954
  always: true

trigger: none
pr: none
variables:
  serviceConnection: 'Prod-DB-Reporting'
  FROM_ADDRESS: 'db-reporting@mail-db-reporting-prod.platform.hmcts.net'
  FAILURE_ADDRESS: 'dcd-devops-support@hmcts.net' # to be verified

jobs:
  - job: rd_judicial
    pool:
      name: 'hmcts-ss-prod'
    steps:
      - task: AzureCLI@2
        displayName: 'Get access token'
        name: gettoken
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: 'inlineScript'
          inlineScript: |
            #!/bin/bash
            set -ex
            output=`az account get-access-token --resource-type oss-rdbms --query accessToken -o tsv`
            echo $output
            echo "##vso[task.setvariable variable=PGPASSWORD]$output"
      - task: AzureKeyVault@2
        inputs:
          azureSubscription: $(serviceConnection)
          KeyVaultName: 'sendgridprod'
          SecretsFilter: 'hmcts-db-reporting-api-key'
          RunAsPreJob: false
      - task: Bash@3
        inputs:
          filePath: './scripts/daily/rd-judicial-api-postgres-db-prod-dbjuddata-daily-rowcount.sh'
        env:
          SENDGRID_APIKEY: $(hmcts-db-reporting-api-key)

  - job: rd_elinks_judicial
    pool:
      name: 'hmcts-ss-prod'
    steps:
      - task: AzureCLI@2
        displayName: 'Get access token'
        name: gettoken
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: 'inlineScript'
          inlineScript: |
            #!/bin/bash
            set -ex
            output=`az account get-access-token --resource-type oss-rdbms --query accessToken -o tsv`
            echo $output
            echo "##vso[task.setvariable variable=PGPASSWORD]$output"
      - task: AzureKeyVault@2
        inputs:
          azureSubscription: $(serviceConnection)
          KeyVaultName: 'sendgridprod'
          SecretsFilter: 'hmcts-db-reporting-api-key'
          RunAsPreJob: false
      - task: Bash@3
        inputs:
          filePath: './scripts/daily/rd-judicial-api-postgres-db-prod-elink-dbjudicialdata-daily-rowcount.sh'
        env:
          SENDGRID_APIKEY: $(hmcts-db-reporting-api-key)

  - job: rd_locationgit
    pool:
      name: 'hmcts-ss-prod'
    steps:
      - task: AzureCLI@2
        displayName: 'Get access token'
        name: gettoken
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: 'inlineScript'
          inlineScript: |
            #!/bin/bash
            set -ex
            output=`az account get-access-token --resource-type oss-rdbms --query accessToken -o tsv`
            echo $output
            echo "##vso[task.setvariable variable=รง]$output"
      - task: AzureKeyVault@2
        inputs:
          azureSubscription: $(serviceConnection)
          KeyVaultName: 'sendgridprod'
          SecretsFilter: 'hmcts-db-reporting-api-key'
          RunAsPreJob: false
      - task: Bash@3
        inputs:
          filePath: './scripts/daily/rd-location-ref-api-postgres-db-prod-dbrdlocationref-daily-locationrefdatarowcount.sh'
        env:
          SENDGRID_APIKEY: $(hmcts-db-reporting-api-key)

  - job: rd_commondata
    pool:
      name: 'hmcts-ss-prod'
    steps:
      - task: AzureCLI@2
        displayName: 'Get access token'
        name: gettoken
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: 'inlineScript'
          inlineScript: |
            #!/bin/bash
            set -ex
            output=`az account get-access-token --resource-type oss-rdbms --query accessToken -o tsv`
            echo $output
            echo "##vso[task.setvariable variable=PGPASSWORD]$output"
      - task: AzureKeyVault@2
        inputs:
          azureSubscription: $(serviceConnection)
          KeyVaultName: 'sendgridprod'
          SecretsFilter: 'hmcts-db-reporting-api-key'
          RunAsPreJob: false
      - task: Bash@3
        inputs:
          filePath: './scripts/daily/rd-commondata-api-postgres-db-prod-dbcommondata-daily-rowcount.sh'
        env:
          SENDGRID_APIKEY: $(hmcts-db-reporting-api-key)

  - job: rd_userprofile
    pool:
      name: 'hmcts-ss-prod'
    steps:
      - task: AzureKeyVault@2
        displayName: 'Get Secrets'
        name: getSecrets
        inputs:
          serviceConnection: 'DCD-CNP-DEV'
          azureSubscription: $(serviceConnection)
          KeyVaultName: 'rd-aat'
          SecretsFilter: 'OAUTH2_CLIENT_ID,OAUTH2_CLIENT_SECRET,idam-rd-system-user-username,idam-rd-system-user-password,user-profile-api-POSTGRES-USER,user-profile-api-POSTGRES-HOST,user-profile-api-POSTGRES-DATABASE,user-profile-api-POSTGRES-PASS'
      - task: Bash@3
        displayName: 'Generate and send Bearer token'
        name: generateSendBearer
        inputs:
          filePath: './scripts/daily/rd-userprofile-api-postgres-db-prod-dbuserprofile-daily-suspendedusercomparewithidam.sh'
        env:
          AZURE_DB_USERNAME: $(user-profile-api-POSTGRES-USER)
          AZURE_HOSTNAME: $(user-profile-api-POSTGRES-HOST)
          AZURE_DB: $(user-profile-api-POSTGRES-DATABASE)
          AZURE_PASS: $(user-profile-api-POSTGRES-PASS)
          idam-rd-system-user: $(idam-rd-system-user)
          idam-rd-system-user-password: $(idam-rd-system-user-password)
          OAUTH2_CLIENT_ID: $(OAUTH2_CLIENT_ID)
          OAUTH2_CLIENT_SECRET: $(OAUTH2_CLIENT_SECRET)
          PGPASSWORD : $(user-profile-api-POSTGRES-PASS)
      - task: AzureCLI@2
        displayName: 'Get access token'
        name: gettoken
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: 'inlineScript'
          inlineScript: |
            #!/bin/bash
            set -ex
            output=`az account get-access-token --resource-type oss-rdbms --query accessToken -o tsv`
            echo $output
            echo "##vso[task.setvariable variable=PGPASSWORD]$output"
      - task: AzureKeyVault@2
        inputs:
          azureSubscription: $(serviceConnection)
          KeyVaultName: 'sendgridprod'
          SecretsFilter: 'hmcts-db-reporting-api-key'
          RunAsPreJob: false
      - task: Bash@3
        inputs:
          filePath: './scripts/daily/rd-userprofile-api-postgres-db-prod-dbuserprofile-daily-suspendedusercomparewithidam.sh'
        env:
          SENDGRID_APIKEY: $(hmcts-db-reporting-api-key)
          ALL_USERS_FLAG: 0

  - job: ccd_daily
    pool:
      name: 'hmcts-ss-prod'
    strategy:
      maxParallel: 1
      matrix:
        ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-grantsissuedyesterdayextract:
          QUERY: ./scripts/daily/ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-grantsissuedyesterdayextract.sh
          TO_ADDRESS: 'probatefeedback@justice.gov.uk'
          CC_ADDRESS: 'Probate.Docs@justice.gov.uk'
          AZURE_HOSTNAME: 'ccd-data-store-api-postgres-db-v15-prod.postgres.database.azure.com'
          AZURE_DB: 'ccd_data_store'
          AZURE_DB_USERNAME: "DTS\ Platform\ Operations\ SC"
          SUBJECT: 'Grants-Issued-Yesterday-Extract Daily Report'
        ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-stopsappliedtogrants:
          QUERY: ./scripts/daily/ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-stopsappliedtogrants.sh
          TO_ADDRESS: 'probatefeedback@justice.gov.uk'
          CC_ADDRESS: 'Probate.Docs@justice.gov.uk'
          AZURE_HOSTNAME: 'ccd-data-store-api-postgres-db-v15-prod.postgres.database.azure.com'
          AZURE_DB: 'ccd_data_store'
          AZURE_DB_USERNAME: "DTS\ Platform\ Operations\ SC"
          SUBJECT: 'Stops-applied-to-Grants Daily Report'
        ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-Welshlanguagedivorceissued:
          QUERY: ./scripts/daily/ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-Welshlanguagedivorceissued.sh
          TO_ADDRESS: 'Kate.Pearce@justice.gov.uk'
          CC_ADDRESS: 'Isabel.syred@justice.gov.uk'
          AZURE_HOSTNAME: 'ccd-data-store-api-postgres-db-v15-prod.postgres.database.azure.com'
          AZURE_DB: 'ccd_data_store'
          AZURE_DB_USERNAME: "DTS\ Platform\ Operations\ SC"
          SUBJECT: 'Welsh-Language-Divorce-Issued Daily Report'
        ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-Welshlanguageissued:
          QUERY: ./scripts/daily/ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-Welshlanguageissued.sh
          TO_ADDRESS: 'Kate.Pearce@justice.gov.uk'
          CC_ADDRESS: 'helen.smith6@justice.gov.uk'
          AZURE_HOSTNAME: 'ccd-data-store-api-postgres-db-v15-prod.postgres.database.azure.com'
          AZURE_DB: 'ccd_data_store'
          AZURE_DB_USERNAME: "DTS\ Platform\ Operations\ SC"
          SUBJECT: 'Welsh-Language-SSCS-Issued Daily Report'
        ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-etOnlineSubmissions:
          QUERY: ./scripts/daily/ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-etOnlineSubmissions.sh
          TO_ADDRESS: 'Harpreet.Jhita@justice.gov.uk,daniel.thompson@justice.gov.uk,etreform@justice.gov.uk'
          AZURE_HOSTNAME: 'ccd-data-store-api-postgres-db-v15-prod.postgres.database.azure.com'
          AZURE_DB: 'ccd_data_store'
          AZURE_DB_USERNAME: "DTS\ Platform\ Operations\ SC"
          SUBJECT: 'ET Online Claim Submission Report'
        ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-etApplicationSubmissions:
          QUERY: ./scripts/daily/ccd-data-store-api-postgres-db-v15-prod-ccd_data_store-daily-etApplicationSubmissions.sh
          TO_ADDRESS: 'Harpreet.Jhita@justice.gov.uk,daniel.thompson@justice.gov.uk,etreform@justice.gov.uk'
          AZURE_HOSTNAME: 'ccd-data-store-api-postgres-db-v15-prod.postgres.database.azure.com'
          AZURE_DB: 'ccd_data_store'
          AZURE_DB_USERNAME: "DTS\ Platform\ Operations\ SC"
          SUBJECT: 'ET Application Submission Report'
    steps:
      - task: AzureCLI@2
        displayName: 'Get access token'
        name: gettoken
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: 'inlineScript'
          inlineScript: |
            #!/bin/bash
            set -ex
            output=`az account get-access-token --resource-type oss-rdbms --query accessToken -o tsv`
            echo $output
            echo "##vso[task.setvariable variable=PGPASSWORD]$output"
      - task: AzureKeyVault@2
        inputs:
          azureSubscription: $(serviceConnection)
          KeyVaultName: 'sendgridprod'
          SecretsFilter: 'hmcts-db-reporting-api-key'
          RunAsPreJob: false
      - task: Bash@3
        inputs:
          filePath: 'email_report.sh'
        env:
          SENDGRID_APIKEY: $(hmcts-db-reporting-api-key)
          CONTAINER_NAME: 'daily'
        retryCountOnTaskFailure: '3'
